@model MO.MVC.ClientSide.Models.mvcMeetingModel
@{
    ViewBag.Title = "AddOrEdit";
}

<div class="form-body">
    @using (Html.BeginForm())
    {
        @Html.HiddenFor(model=>model.MeetingID)
        <div class="form-group">
            @Html.Label("Toplantı Konusu")
            @Html.EditorFor(model=>model.MeetingTopic)
            @Html.ValidationMessageFor(model=>model.MeetingTopic)
        </div>
        <div class="form-group">
            @Html.Label("Toplantı Tarihi")
           @if (Model.MeetingID == 0)
           {
            @Html.EditorFor(model => model.MeetingDate, new
           {
               htmlAttributes = new
               {
                   @class = "date-pickerMeeting",
                   @Value = DateTime.Now.ToString("yyyy-MM-dd")
               }
           }
       )
           }
           else
           {
            @Html.EditorFor(model => model.MeetingDate, new
           {
               htmlAttributes = new
               {
                   @class = "date-pickerMeeting",
                   @Value = Model.MeetingDate.ToString("yyyy-MM-dd")
               }
           }
       )
           }
            @Html.ValidationMessageFor(model => model.MeetingDate)
        </div>
        <div class="form-group">
            @Html.Label("Başlangıç Saati")
            @if (Model.StartTime == null)
            {
                @Html.EditorFor(model => model.StartTime, new { htmlAttributes = new { @class = "timepicker", @Value=(DateTime.Now.Hour+1).ToString()} })
            }
            else
            {
                   @Html.EditorFor(model => model.StartTime, new { htmlAttributes = new { @class = "timepicker", @Value = Model.StartTime } })
            }
            @Html.ValidationMessageFor(model => model.StartTime)
        </div>
        <div class="form-group">
            @Html.Label("Bitiş Saati")
            @Html.EditorFor(model => model.EndTime, new { htmlAttributes = new { @class = "timepickerEnd" } })
            @Html.ValidationMessageFor(model => model.EndTime)
        </div>
        <div class="form-group">
            @Html.Label("Katılımcılar")
            @Html.EditorFor(model => model.Katılımcılar)
            @Html.ValidationMessageFor(model => model.Katılımcılar)
        </div>
        <div class="form-group">
            <input type="submit" value="Kaydet" class="btn button"/>
            <input type="reset" value="Yenile" class="btn button" />
        </div>
    }
</div>
<link href="~/Content/themes/base/jquery-ui.min.css" rel="stylesheet" />
@section scripts{
    @System.Web.Optimization.Scripts.Render("~/bundles/jqueryval");
<script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>
<script type="text/javascript">
  $(function () {
            $('.date-pickerMeeting').datepicker({
                dateFormat: "yy-mm-dd",                           
                monthNames: [ "Ocak", "Şubat", "Mart", "Nisan", "Mayıs", "Haziran", "Temmuz", "Ağustos", "Eylül", "Ekim", "Kasım", "Aralık" ],
                dayNamesMin: [ "Pa", "Pt", "Sl", "Ça", "Pe", "Cu", "Ct" ],
                firstDay:1,
                minDate: 0,
                maxDate: "+12M",
                showOn: 'both',
                buttonText: '<i class="fas fa-calendar-alt"></i>'
            });
  });
</script>
<script src="//cdnjs.cloudflare.com/ajax/libs/timepicker/1.3.5/jquery.timepicker.min.js"></script>
    <script type="text/javascript">
        $(function () {
            $('.timepicker').timepicker({
                timeFormat: 'h:mm p',
                interval: 30,
                minTime: '9',
                maxTime: '6:00pm',
                startTime: '09:00',
                dynamic: false,
                dropdown: true,
                scrollbar: true
            });
        });
    $(function () {
                $('.timepickerEnd').timepicker({
                    timeFormat: 'h:mm p',
                    interval: 30,
                    minTime: '10',
                    maxTime: '6:00pm',

                    startTime: $('.timepicker').val(),
                    dynamic: false,
                    dropdown: true,
                    scrollbar: true
                });
            })
       
    </script>

    @*Bu kısımda boş olan saatler doldurulabilir. Devam edilecek ...*@


   @*<script type="text/javascript">
    $(document).ready(function () {
        $(".date-pickerMeeting").change(function () {
            var MeetingDate = $(".date-pickerMeeting").val();

            $("#StartTime").empty();
            $.ajax({
                type: 'POST',
                url: '/Meeting/GetTimes?MeetingDate=' + MeetingDate,
                dataType: 'json',
                data:{MeetingDate:MeetingDate},
                success: function (response) {
                    console.log(response);
                    $.each(response, function (index, item) {
                        $("#StartTime").append('<option value="' + item.Value + '">' + item.Text + '</option>');
                    });
                },
                error: function (ex) {
                    alert('Failed.' + ex);
                }
            });
            return false;
        })
    });
</script>*@

    }
